kind: Pod
apiVersion: v1
metadata:
  name: spring-boot
  labels:
    name: spring-boot
    app: spring-boot
spec:
  containers:
  - name: spring-boot
    image: 016973021151.dkr.ecr.eu-west-1.amazonaws.com/ungerw:spring-boot
    imagePullPolicy: IfNotPresent
    ports:
      - containerPort: 8080
    livenessProbe:
      httpGet:
        path: /
        port: 8080
      initialDelaySeconds: 300
    readinessProbe:
      httpGet:
        path: /spring-docker/hello
        port: 8080
      initialDelaySeconds: 300
    resources:
          limits:
            cpu: 800m
            memory: 1Gi
          requests:
            cpu: 800m
            memory: 1Gi
---
kind: Service
apiVersion: v1
metadata:
  name: spring-boot
  labels: 
    app: spring-boot
  annotations:
    fabric8.io/expose: "true"
    fabric8.io/exposeUrl: http://spring-boot.aws.nttdata.com
    fabric8.io/ingress.annotations: 'kubernetes.io/ingress.class: nginx'
spec:
  selector:
    app: spring-boot
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: spring-boot
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: spring-boot.aws.nttdata.com
    http:
      paths:
      - backend:
          serviceName: spring-boot
          servicePort: 80
