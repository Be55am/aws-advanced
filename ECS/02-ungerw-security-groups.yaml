Description: >
    2 security groups, one for the ecs hosts, one for the loadbalancer
#  by wolfgang unger 9.3.2018 - based on official amazon stacks

Parameters:  
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: ecs-example
    
    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the security groups should be deployed to

Resources:
    # security group for the ecs instances
    ECSHostSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
            SecurityGroupIngress:
                # Only allow inbound access to ECS from the ELB
                - SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup 
                  IpProtocol: -1
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-ECS-Hosts

    # security group for the load balancer
    LoadBalancerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties: 
            VpcId: !Ref VPC
            GroupDescription: Access to the load balancer that sits in front of ECS
            SecurityGroupIngress:
                # Allow access from anywhere to our ECS services
                - CidrIp: 0.0.0.0/0
                  IpProtocol: -1
            Tags: 
                - Key: Name
                  Value: !Sub ${EnvironmentName}-LoadBalancers

Outputs:
    ECSHostSecurityGroup: 
        Description: A reference to the security group for ECS hosts
        Value: !Ref ECSHostSecurityGroup
        Export:
            Name: ECSHostSecurityGroup

    LoadBalancerSecurityGroup:
        Description: A reference to the security group for load balancers
        Value: !Ref LoadBalancerSecurityGroup
        Export:
            Name: LoadBalancerSecurityGroup

