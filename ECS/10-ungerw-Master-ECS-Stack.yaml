Description: >
    ECS example , vpc, infrastructure, ecs-cluster
#  by wolfgang unger 9.3.2018 - based on official amazon infrastructure stacks

Parameters:
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: ecs-example


Resources:
    VPC:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.eu-central-1.amazonaws.com/ungerw-cloudformation-stacks/01-ungerw-vpc.yaml 
            Parameters:
                EnvironmentName:    !Ref EnvironmentName
                VpcCIDR:            10.180.0.0/16
                PublicSubnet1CIDR:  10.180.8.0/21
                PublicSubnet2CIDR:  10.180.16.0/21
                PrivateSubnet1CIDR: 10.180.24.0/21
                PrivateSubnet2CIDR: 10.180.32.0/21

    SecurityGroups:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.eu-central-1.amazonaws.com/ungerw-cloudformation-stacks/02-ungerw-security-groups.yaml 
            Parameters: 
                EnvironmentName:    !Ref EnvironmentName    
                VPC: !GetAtt VPC.Outputs.VPC

    ALB:
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.eu-central-1.amazonaws.com/ungerw-cloudformation-stacks/03-ungerw-load-balancers.yaml 
            Parameters:
                EnvironmentName:  !Ref EnvironmentName  
                VPC: !GetAtt VPC.Outputs.VPC
                Subnets: !GetAtt VPC.Outputs.PublicSubnets
                SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

    ECS:
        DependsOn: "ALB"
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.eu-central-1.amazonaws.com/ungerw-cloudformation-stacks/04-ungerw-ecs-cluster.yaml 
            Parameters:
                EnvironmentName:  !Ref EnvironmentName  
                InstanceType: t2.small
                ClusterSize: 2
                VPC: !GetAtt VPC.Outputs.VPC
                SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
                Subnets: !GetAtt VPC.Outputs.PrivateSubnets

    Service:
        DependsOn: "ECS"
        Type: AWS::CloudFormation::Stack
        Properties:
            TemplateURL: https://s3.eu-central-1.amazonaws.com/ungerw-cloudformation-stacks/08-ungerw-service-complete.yaml
            Parameters:
                #EnvironmentName:  !Ref EnvironmentName               
                VPC: !GetAtt VPC.Outputs.VPC
                DesiredCount: 2
                Path: /spring-docker/hello
                ServiceName: spring-boot

Outputs:
    ServiceUrl: 
        Description: The URL endpoint for the service
        Value: !Join [ "/spring-docker/", [ !GetAtt ALB.Outputs.LoadBalancerUrl, "hello" ]]